#ifndef _CEU_MEDIA_AUX
#define _CEU_MEDIA_AUX

#include "raw.ceu"

code/tight
Scene_Pause (var& IScene scene) -> void
do
  call Scene_Pause_Base (&scene);
end

code/tight
Scene_Resume (var& IScene scene) -> void
do
  call Scene_Resume_Base (&scene);
end

code/tight
Scene_Set_Tick_Interval (var& IScene scene, var u64 interval) -> void
do
  call Scene_Set_Tick_Interval_Base (&scene, interval);
end

/* Play_New */

code/tight/dynamic
Play_New (var& IScene scene, dynamic var& Media media) -> _lp_Media&&
do
  escape call/dynamic Play_New_Base (&scene, &media);
end

code/tight/dynamic
Play_New (var& IScene scene, dynamic var& Media.Text media) -> _lp_Media&&
do
  escape call/dynamic Play_New_Base (&scene, &media);
end

code/tight/dynamic
Play_New (var& IScene scene, dynamic var& Media.Image media) -> _lp_Media&&
do
  escape call/dynamic Play_New_Base (&scene, &media);
end

code/tight/dynamic
Play_New (var& IScene scene, dynamic var& Media.Video media) -> _lp_Media&&
do
  escape call/dynamic Play_New_Base (&scene, &media);
end

code/tight/dynamic
Play_New (var& IScene scene, dynamic var& Media.Audio media) -> _lp_Media&&
do
  escape call/dynamic Play_New_Base (&scene, &media);
end

/* Play_Set_Media */

code/tight/dynamic
Play_Set_Media (var& IPlay play, dynamic var& Media media) -> void
do
  call/dynamic Play_Set_Media_Base (&play, &media);
end

code/tight/dynamic
Play_Set_Media (var& IPlay play, dynamic var& Media.Text text) -> void
do
  call/dynamic Play_Set_Media_Base (&play, &text);
end

code/tight/dynamic
Play_Set_Media (var& IPlay play, dynamic var& Media.Image image) -> void
do
  call/dynamic Play_Set_Media_Base (&play, &image);
end

code/tight/dynamic
Play_Set_Media (var& IPlay play, dynamic var& Media.Audio audio) -> void
do
  call/dynamic Play_Set_Media_Base (&play, &audio);
end

code/tight/dynamic
Play_Set_Media (var& IPlay play, dynamic var& Media.Video video) -> void
do
  call/dynamic Play_Set_Media_Base (&play, &video);
end

/* Play_Set_* */

code/tight
Play_Set_Char (var& IPlay play, var _char&& name, var _char&& value) -> void
do
  call Play_Set_Char_Base (&play, name, value);
end

code/tight
Play_Set_Int (var& IPlay play, var _char&& name, var int value) -> void
do
  call Play_Set_Int_Base (&play, name, value);
end

code/tight
Play_Get_Int (var& IPlay play, var _char&& name) -> int
do
  escape call Play_Get_Int_Base (&play, name);
end

code/tight
Play_Set_Bool (var& IPlay play, var _char&& name, var bool value) -> void
do
  call Play_Set_Bool_Base (&play, name, value);
end

code/tight
Play_Get_Bool (var& IPlay play, var _char&& name) -> bool 
do
  escape call Play_Get_Bool_Base (&play, name);
end

code/tight
Play_Set_Region (var& IPlay play, var Region region) -> void
do
  call Play_Set_Region_Base (&play, region);
end

code/tight
Play_Seek (var& IPlay play, var u64 time, var bool relative) -> void
do
  call Play_Seek_Base (&play, time, relative);
end

code/tight
Play_Get_Running_Time (var& IPlay play) -> u64 
do
  escape call Play_Get_Running_Time_Base (&play);
end

#endif
